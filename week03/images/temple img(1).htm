<!DOCTYPE html>
<!-- saved from url=(0081)https://byui-cse.github.io/wdd131-ww-course/week03/prepare-responsive-images.html -->
<html lang="en-us"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
  
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>WDD 131 | Responsive Images - srcset</title>
  <link rel="shortcut icon" href="https://byui-cse.github.io/wdd131-ww-course/favicon.ico" type="image/x-icon">
  <link rel="preconnect" href="https://fonts.googleapis.com/">
  <link rel="preconnect" href="https://fonts.gstatic.com/" crossorigin="">
  <link href="./temple img(1)_files/css2" rel="stylesheet">
  <link rel="stylesheet" href="./temple img(1)_files/course.css">
  <link rel="stylesheet" href="./temple img(1)_files/vs2015.min.css">
</head>

<body>
  <header>
    <div class="page">
      <h1>WDD 131<span id="coursetitle">: Dynamic Web Fundamentals</span></h1>
      <img src="./temple img(1)_files/byui-logo.svg" alt="BYU-I logo" class="logo">
    </div>
  </header>
  <main class="page">
    <nav>
      <span><a href="https://byui-cse.github.io/wdd131-ww-course/">Home</a></span>
      <span><a href="https://byui-cse.github.io/wdd131-ww-course/week01/">W1</a></span>
      <span><a href="https://byui-cse.github.io/wdd131-ww-course/week02/">W2</a></span>
      <span class="active"><a href="https://byui-cse.github.io/wdd131-ww-course/week03/">W3</a></span>
      <span><a href="https://byui-cse.github.io/wdd131-ww-course/week04/">W4</a></span>
      <span><a href="https://byui-cse.github.io/wdd131-ww-course/week05/">W5</a></span>
      <span><a href="https://byui-cse.github.io/wdd131-ww-course/week06/">W6</a></span>
      <span><a href="https://byui-cse.github.io/wdd131-ww-course/week07/">W7</a></span>
    </nav>

    <h2>Responsive Images: srcset</h2>

    <h3>Overview</h3>
    <p>We have worked with basic image optimization using image types, sizing, and quality level
      adjustments. We also want to be aware of the image's appearance in different screen sizes. The
      work of <a href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images">responsive
        image design</a> is to support smaller page weights and to deliver content based upon screen
      size. <strong>The objective</strong> is to reduce page weight while being conscious of image
      clarity and functionality in each screen size and subsequent viewport (the visible area of a
      web page).
    </p>
    <div class="callout info">
      <p>
        "Serving desktop-sized images to mobile devices can use 2-4x more data than needed. Instead
        of
        a "one-size-fits-all" approach to images, serve different image sizes to different devices.
        How
        many image versions should you create? There is no single 'correct' answer to this question.
        However, it's common to serve 3-5 different sizes of an image. Serving more image sizes is
        better for
        performance, but will take up more space on your servers and require writing a tiny bit more
        HTML." - Web.dev</p>
    </div>

    <h3>Prepare</h3>

    <p>The user experience (<strong>UX</strong>) concept is that users expect to scroll web pages
      vertically
      with no need to scroll horizontally to view content. Nor should the user should be required to
      zoom in or out to see the page content. We cannot expect nor rely upon on a particular
      viewport width in order for the page to render properly.</p>
    <p>This activity focuses on applying the <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#Using_the_srcset_and_sizes_attributes" target="_blank" rel="noopener">srcset attribute</a> to images using the picture and source
      elements. The browser parses the responsive image syntax and decides which image is the best
      match.</p>
    <p>The activity content <strong>assumes</strong> the following:</p>
    <ul class="check">
      <li>The <a href="https://byui-cse.github.io/wdd131-ww-course/resources/dev-standards.html" target="_blank" rel="noopener"><strong>viewport
            meta element</strong></a> has been properly applied to the document.</li>
      <li>The images to be used have been <strong>optimized</strong> for the web by
        <ul>
          <li>Limiting the images' <strong>width and height</strong> (dimensions) to no more than is
            necessary for the page design in any view size.</li>
          <li>The images are of a valid web <strong>type/format</strong>.</li>
          <li>The images are <strong>compressed</strong> to reduce their overall file size. In many
            image editing software packages this is referred to as reducing the 'quality'.</li>
        </ul>
      </li>
      <li>The developer has designed and saved images for use on different screen sizes.
        <div class="callout info">
          <p>
            <strong>Art Direction</strong> is the cropping and dimensional sizing of images to focus
            the user's attention on a specific part of the image to meet the design objectives of
            the page in different view sizes.
          </p>
          <div class="callout reference">
            <p>Read: ðŸ“„ <a href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/responsive_images#Art_direction" target="_blank" rel="noopener">Art Direction</a> - MDN</p>
          </div>
        </div>
      </li>
    </ul>
    <p>Responsive images are images that scale nicely to fit any browser size. The srcset attribute
      allows the browser to choose the best image to display based on the device's screen size and
      resolution. The srcset attribute is used with the picture and source elements.</p>
    <p>Srcset supports the need to target different browser ranges. A different image can be
      rendered depending up on the width of the screen. Here is an example:</p>
    <pre>    <code class="html hljs language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">picture</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">source</span> <span class="hljs-attr">srcset</span>=<span class="hljs-string">"images/hero-large.webp"</span> <span class="hljs-attr">media</span>=<span class="hljs-string">"min-width: 1000px"</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">source</span> <span class="hljs-attr">srcset</span>=<span class="hljs-string">"images/hero-medium.webp"</span> <span class="hljs-attr">media</span>=<span class="hljs-string">"min-width: 550px"</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"images/hero-small.webp"</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">"Orem Utah Temple"</span> <span class="hljs-attr">width</span>=<span class="hljs-string">"400"</span> <span class="hljs-attr">height</span>=<span class="hljs-string">"200"</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">picture</span>&gt;</span></code></pre>
    <div class="callout reference">
      <p>The <strong>picture</strong> tag has a reference to three different images, two sources and
        a default img
        tag. Which image is rendered by the browser depends upon the media queries. The following is
        a description of the rendering process:
      </p>
      <p>Is the width of the browser at least a minimum width of 1000px?
        If so, the srcset path replaces the src from the img tag and the
        <code>hero-large.webp</code> image is displayed. If the browser view width is less than
        1000px then the browser tests the next source given.
      </p>
      <p>Is the width of the browser at least a minimum width of 550px? If so, the
        <code>hero-medium.webp</code> image is used.
      </p>
      <p>The default is the img tag src reference to <code>hero-small.webp</code>.</p>
    </div>

    <h3>Activity Instructions</h3>

    <h4 class="step">File and Folder Setup</h4>
    <ol>
      <li>If it does not already exist, create a folder named "<strong>week03</strong>" in the
        wdd131 directory.</li>
      <li>Add a new file named "<strong>responsive-images.html</strong>" to that week03 folder.</li>
      <li>Provide a basic HTML structure to the responsive-images.html file.</li>
      <li>If it does not already exist, add a "<strong>styles</strong>" folder to the week03 folder
        and
        add a new CSS file named "<strong>responsive-images.css</strong>" to that styles folder.
      </li>
      <li>If it does not already exist, create a folder named "<strong>images</strong>" in your
        week03 directory.</li>
    </ol>

    <h4 class="step">Image Editing</h4>
    <ol>
      <li>Navigate to <a href="https://www.churchofjesuschrist.org/temples/list?lang=eng" target="_blank" rel="noopener">Temple
          List</a> and click on a temple link of your choice to gain access to that temple's
        <strong>Media Gallery</strong>.
      </li>
      <li>In the Media Gallery of the temple, click on one of the images and download a
        <strong>Large</strong> version of the image by using <strong>Save Image As...</strong> or
        equivalent method.
      </li>
      <li>Using your image editing, like <a href="https://pixlr.com/e/" target="_blank" rel="noopener">Pixlr E</a>,
        load the downloaded image file and create three (3) different images:
        <ul class="check">
          <li>Each image should have a different crop (Art Direction)</li>
          <li>Save all three images in the WebP file format with a quality around 50%.</li>
          <li>Create a small version named "<strong>hero-small.webp</strong>" that is 500px in width
            by 250px in height.</li>
          <li>Create a medium version named "<strong>hero-medium.webp</strong>" that is 1000px in
            width by 500px in height.</li>
          <li>Create a large version named "<strong>hero-large.webp</strong>" that is 1500px in
            width by 750px in height.
            <div class="callout info">Note that the <strong>ratios</strong> of all these images are
              2:1 for consistency.</div>
          </li>
        </ul>
      </li>
      <li>Put all of these images in your images folder for week03.</li>

    </ol>

    <h4 class="step">HTML: Picture Element</h4>
    <ol>
      <li>In your html file, add a <code>main</code> element with a generic division element with
        the class of "<strong>hero</strong></li>
      <li>Within the <code>div</code> element, add a <code>picture</code> element.</li>
      <li>Within the <code>picture</code> element, add a <code>source</code> element with attributes
        for <code>media</code> and <code>srcset</code>
        <div class="callout info">Emmet Shorthand (enter syntax + tab):
          <pre><code class="cli hljs language-less"><span class="hljs-selector-tag">main</span>&gt;<span class="hljs-selector-tag">div</span><span class="hljs-selector-class">.hero</span>&gt;<span class="hljs-selector-tag">picture</span>&gt;<span class="hljs-selector-tag">source</span>:<span class="hljs-selector-tag">media</span>*<span class="hljs-number">2</span>+<span class="hljs-selector-tag">img</span></code></pre>
        </div>
      </li>
      <li>Set the path for the srcset to the largest image.</li>
      <li>Set the media attribute to <code>min-width: 1000px</code> which is the width of the large
        hero image created earlier.</li>
      <li>If needed, copy and paste the source line of markup and then change the image to the
        medium image and the min-width to 500px.
        <div class="callout info">Neither of these images will render on a page. An <code>img</code>
          element with a <code>src</code> is needed.</div>
      </li>
      <li>Add the <code>img</code> element with a src referencing the smallest image.</li>
      <li>Set the <code>alt</code> attribute value to a description of the image.</li>
      <li>Set the <code>width</code> and <code>height</code> attributes to the width and height of
        the largest image. What should the values for width and height be since we have a 500px by
        250px photo and a 1000px by 500px photo and a 1500px by 750px photo? The important point is
        to maintain the aspect ratio of the image as the ratio is used by the browser to render the
        space required by the image once it loads. We can use the large image of 1500 and 750 or any
        equivalent ratio.</li>
    </ol>
    <details>
      <summary>Example</summary>
      <pre>      <code class="html hljs language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"hero"</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">picture</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">source</span> <span class="hljs-attr">srcset</span>=<span class="hljs-string">"images/hero-large.webp"</span> <span class="hljs-attr">media</span>=<span class="hljs-string">"(min-width: 1000px)"</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">source</span> <span class="hljs-attr">srcset</span>=<span class="hljs-string">"images/hero-medium.webp"</span> <span class="hljs-attr">media</span>=<span class="hljs-string">"(min-width: 500px)"</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"images/hero-small.webp"</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">"Temple name and location"</span> <span class="hljs-attr">width</span>=<span class="hljs-string">"500"</span> <span class="hljs-attr">height</span>=<span class="hljs-string">"250"</span>&gt;</span>
  <span class="hljs-tag">&lt;/<span class="hljs-name">picture</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre>
    </details>

    <div class="callout info">
      <strong>Why are img width and height necessary?</strong>
      <p>Some of the most common causes of a <strong>layout shift</strong> or reflow during the
        rendering of a page are images, ads, embeds, and iframes without dimensions. "Layout shifts
        can be distracting to users. Imagine you've started reading an article when all of a sudden
        elements shift around the page, throwing you off and requiring you to find your place again.
        This is very common on the web, including when reading the news, or trying to click those
        'Search' or 'Add to Cart' buttons. Such experiences are visually jarring and frustrating.
        They are often caused when visible elements are forced to move because another element was
        suddenly
        added to the page or resized."</p> <a href="https://web.dev/optimize-cls/">Optimize
        Cumulative Layout Shift</a> - Osmani and Pollard, web.dev
    </div>

    <h4 class="step">CSS: </h4>
    <ol>
      <li>In the style sheet, enable responsive behavior on the image by setting the
        <code>width</code> of the img element to 100% and the <code>height</code> to
        <code>auto</code> (or vice-versa). This is the easiest way to maintain the image aspect
        ratio.
        <pre><code class="css hljs language-css"><span class="hljs-selector-class">.hero</span> <span class="hljs-selector-tag">img</span> {
  <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;
  <span class="hljs-attribute">height</span>: auto;
}</code></pre>

        Or to use object-fit with set image containers. Just be mindful of the art direction with
        the responsive results.
        <pre><code class="css hljs language-css"><span class="hljs-selector-class">.hero</span> <span class="hljs-selector-tag">img</span> {
  <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;
  <span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span>;
  <span class="hljs-attribute">object-fit</span>: cover;
}</code></pre>
        Another solution is to use the <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/aspect-ratio" target="_blank" rel="noopener">aspect-ratio</a> property.
      </li>
    </ol>

    <div class="callout warning">
      <p>We want responsive images to maintain their intrinsic <strong>aspect ratio</strong>.
        Alternating the aspect ratio by setting the width AND height to values (including setting
        the height to relative measure 100%) in order to fill your design space may distort and
        pixelate the image. Lighthouse will report on major aspect ratio violations.</p>
      <p>More information about <a href="https://byui-cse.github.io/wdd131-ww-course/resources/image-aspect-ratio.html">aspect ratios</a>.
      </p>
    </div>

    <div class="callout reference">
      <h4>Optional Resources</h4>
      <ul>
        <li><a href="https://video.byui.edu/media/Responsive+Images++G/0_guljmspi" target="_blank" rel="noopener">Make
            Your Site Lightning Fast With Responsive Images</a> - Web Dev Simplified</li>
        <li><a href="https://www.youtube-nocookie.com/embed/ojZRjhcR3yw?rel=0&amp;showinfo=0" data-preview-alt="Working with Responsive Images" target="_blank" rel="noopener">Working with
            Responsive
            Images</a> | <span class="smaller"><em>(6:49 mins, <a href="https://docs.google.com/document/d/e/2PACX-1vTh9y1ppiDLWmG4JJj9B27k5WKvQXBOKJpxVa69hOC7NadANyr2OSUNLlBLjewXmkM_KAi_rn7ZD3cB/pub">Responsive
                Images Transcript</a>)</em></span>
        </li>
        <li><a href="https://web.dev/serve-responsive-images/?utm_source=lighthouse&amp;utm_medium=devtools" target="_blank" rel="noopener">Serve Responsive Images</a> - Katie Hempenius -
          dev.to</li>
        <li><a href="https://video.byui.edu/media/Responsive+Images++G/0_guljmspi" target="_blank" rel="noopener">Picture Element</a> - Paul Cheney</li>
        <li><a href="https://web.dev/aspect-ratio/" target="_blank" rel="noopener">Aspect-Ratio CSS Property</a>
          - Una Kravets - web.dev</li>

      </ul>
    </div>

  </main>
  <footer>
    <p>Copyright Â© Brigham Young University-Idaho | All rights reserved</p>
  </footer>
  <script src="./temple img(1)_files/highlight.min.js"></script>
  <script>hljs.highlightAll();</script>



</body></html>